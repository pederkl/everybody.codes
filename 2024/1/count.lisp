(defparameter *input-1*
  "AABBBCBABCBBABCBAAACABCAACBCBCBCABACAABCBCBAABCCABBCCACABBCBAAABAACCAACCAACCBBAAABBBBACCBCBBBCBAAAAABAABBACBCBBABAABCABBCBBCABBBCBBCACBBCCBCAAACABAABABAAACBBCACCCCCBAACCCCAACABBBABBBCABCACAAABCCCAACCCCAABBCBBCCBAABBAABCBABAAAACACBABCCCBACCCBBABACAACBACCACCAABAACABCACCAAABBCCAAAAABAABCCACBCBCCCAABCBABBCBACAAAABBCBCCCCCAABCCBCABACACAAAACCABCCAABAACCABBACBAAACCAAACBCBCACBCBBCABAABACCACBCCAAAABABAAABCBBBBCBACACABABBCAACBAACABBCACBCBBBACCBBBCCABACACBBACAACBACAAACCACBACCBAABBABCBABBCCBCACCBAACBABBAABBABCABAABABBABBACCABAAACBBCBCAAACACABBAAACCABBBACCCBBCCABBBCCCAABCCBAABACBACCBCCCABCBABAAACCACCCCCCCABCBAAABBABABBACABBCBACAABBCCBAACBCACABBACBCACCAABBACABBACCAAAAABBCAACABAACBBBBAABAABCBBCCBCCACCBCCCBACCCBAAAABBACCAABABCACCCAABACACCAACBCBBABCACBCBBCBBACBCAAABACCABACBBBBACBBCCBCABCCABACBCAAABAAABCCAACACCCCBCABACACBACBACCBABACACCACCAABCCACCCBCCCCBAACAABBAACCBABCAABCABACCCAABBCCABACACCBCAACACAACBCBCBCCAABAACCABAABBABBAABBBACBABBBCCBAACAABCCACBCBCCCCCBCBACCCCBACCBBCBBBABCACBBBACACCACBBCBCCBBCACACCCC")

(defparameter *input-2* "DABCxDBBDAABCBDBDBDDBACDCBADxBBDDxAABxxAACBCABDADABBBDBxCxAACACxCAAADxAACDCAxAACAxCBABDDxCAAAxCCBBDBDBBAADCAADADDBCDDAABDBDADBAADACABCBDAADDxCCBDADAAAADCBxAABDCADxBxADCADBxxDCDBCDDBDBAAACxAADBACCDABxCCBABDBBDBCBCxCCCAADBBDDCxBDBADBACABBCCxADDBxAxDDDBDBxxCDCBAxDDACCCCABADBAABCBABDCxCxDDBBDDBDxAABABBBACCCBBCBCBCBCAADADBDCDBCCDABDDDACAAABDBDDDDxBBxCCBDBDDAxDDCAAxACDCBCCAAAxCBADBBCBAADDCCACBxCCAxCBDCDBDBACBDADACCAACAxBAxDCCBBDxAACCBDxxACDABBDDABDCDBBBCACAABCBxCxxBDBBBAxCCDDxCBDBDDBxAxxDBCBBBDDACxDxAxDACxDCAAACCBADBAABCCxDAABADxAACBACDCDDAACDBBCAADDDDAADDBxxCACACxDAxAxDDABBxAACxBCBACCCDBACCBACDxBxBAABACBBDAAxCCxABCxCACCCCxxBAxCCxDBDDACBDxBAABABDACABCxCxCxCCDxxBCDBBBDABCADABCADDAACCxCADCCACAAxABDxDCCAABBCxCBDDDDCAAACADDCABCDBDACAABACDBDCDBAABxAABCCAxCAABABCDBACBDDABACBAxCDCDAAxBDDCAABBABABBxCDAABDBCDDDDDDDCCACCCACCDAABBACDBACBDDxABAADAxCDCABCADDADDDBxBBCCABACxCCDDBCACABCBAACxBxBBDDCDCAxCBCBCDADDCBDAAACCDCxBxCACDACBDxxDBCCBxBBAAABDAAxCCCCDCCBBDDDCCADBCBDDBABBBCCCBBAAAACADAADBACACADDxBBCCBDxCCBCCAxxCAACBBCBxxCCBAACCxAADCBCBCDBCAAACDCCDCDxCADCCDBABDBCABCBDDABAACADDxDAxBBACABACDCDxAxDDCAAxAABBADxDxBCxBxACDBACCADDCBBCDAAADBABCxABCxACBDABBDBACCABDDxxCDABAxBDBBBDDDCDxxBDDBDDCDBDxBCCBBDxADDBAABCCxACAxBCBxDxDDDDABBxCADBADDAACDBACCBxxCAAxDDDADDDBDDACBDDBCCDBACDBAACxDBDACBCDDxAACDDxCBDCAxxDBxBDBDDDxCDAACBDDDCAACBADCxDABBBDAAAADBABAxABBADBBBDDABCACCAAADADDDBCxCBDDACDBACCCCCAAxBBBCBxDCBxxBBCCDxAxBAxBADDCBCADDCACxBAxBCCCCCBDCCAADBDCAADBAxBBCDABACDACxACCCxCADCBACBBDAxxxABxBDCxCBCABADCCCxADCAABBCDBACCxDAACDDxDCCAAACCCBADDCCBDDAxACADACBCDBACxCACBCBCDCDBDDAADADDxxxBDCCxDBDDCADCCCCxAAAxCDACCBDAxxDCDCCCxCxBAxBxDBACBDDDACACDDAACxxCBCACADDCBBxBBABCxCCAABAAAxACCABDCxACACBBDDADDDDACBBBBDDCDDBxBCDxAAACxCBDBCADBBACBBDCACDABCDxCBDABACCCDDBADDBCACACxDxBACBCAxCACAAxCADBDABDACADABAxBDADBxBDDCBADADCAxADCCxBCDxxBxADDAAxDDBBDxCAACDDBBBCADCBDCDAADBDACCCDCxBDDxBBCCCADABCCDDCDBBxDBBBxCBABDABBDACBBCBDxDDBCxCACDDADACxDBCCCACDDDxAAADAAADxBCCDCxADAAADDCDBAACBDCACBCBCADDCDCDBDDDxDCACADCCBDDAxBDBxAABBCADBxDCACABC")

(defparameter *potions-reqs*
  '((#\A . 0)
    (#\B . 1)
    (#\C . 3)
    (#\D . 5)))

(defun count-potions-1 (&optional (input *input-1*))
  (loop for c across input
        for p = (cdr (assoc c *potions-reqs*))
        when p
          sum p))

(defun count-potions-2 (&optional (input *input-2*))
  (loop for (c1 c2) on (coerce input 'list) by #'cddr
        for p1 = (cdr (assoc c1 *potions-reqs*))
        for p2 = (cdr (assoc c2 *potions-reqs*))
        when (and p1 p2)
          do
             (incf p1)
             (incf p2)
        sum (+ (or p1 0) (or p2 0))))
