(defparameter *input*
  "AABBBCBABCBBABCBAAACABCAACBCBCBCABACAABCBCBAABCCABBCCACABBCBAAABAACCAACCAACCBBAAABBBBACCBCBBBCBAAAAABAABBACBCBBABAABCABBCBBCABBBCBBCACBBCCBCAAACABAABABAAACBBCACCCCCBAACCCCAACABBBABBBCABCACAAABCCCAACCCCAABBCBBCCBAABBAABCBABAAAACACBABCCCBACCCBBABACAACBACCACCAABAACABCACCAAABBCCAAAAABAABCCACBCBCCCAABCBABBCBACAAAABBCBCCCCCAABCCBCABACACAAAACCABCCAABAACCABBACBAAACCAAACBCBCACBCBBCABAABACCACBCCAAAABABAAABCBBBBCBACACABABBCAACBAACABBCACBCBBBACCBBBCCABACACBBACAACBACAAACCACBACCBAABBABCBABBCCBCACCBAACBABBAABBABCABAABABBABBACCABAAACBBCBCAAACACABBAAACCABBBACCCBBCCABBBCCCAABCCBAABACBACCBCCCABCBABAAACCACCCCCCCABCBAAABBABABBACABBCBACAABBCCBAACBCACABBACBCACCAABBACABBACCAAAAABBCAACABAACBBBBAABAABCBBCCBCCACCBCCCBACCCBAAAABBACCAABABCACCCAABACACCAACBCBBABCACBCBBCBBACBCAAABACCABACBBBBACBBCCBCABCCABACBCAAABAAABCCAACACCCCBCABACACBACBACCBABACACCACCAABCCACCCBCCCCBAACAABBAACCBABCAABCABACCCAABBCCABACACCBCAACACAACBCBCBCCAABAACCABAABBABBAABBBACBABBBCCBAACAABCCACBCBCCCCCBCBACCCCBACCBBCBBBABCACBBBACACCACBBCBCCBBCACACCCC")

(defparameter *potions-reqs*
  '((#\B . 1)
    (#\C . 3)))

(defun count-potions (&optional (input *input*))
  (loop for c across input
        for p = (cdr (assoc c *potions-reqs*))
        when p
          sum p))
